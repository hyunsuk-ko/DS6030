}
my_y
fit_bat = tibble(x = seq(0,8,0.5), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
n = length(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
geo$dist[1:3]
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(seq(0,8))) {
x_i = seq(0,8)[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
n = length(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(seq(0,8))) {
x_i = seq(0,8)[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
n = length(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(seq(0,8))) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
n = length(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(geo$dist) {
n = length(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8), y = my_y)
n = length(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8, n), y = my_y)
seq(0,8, n)
n
n = nrows(geo)
n = nrow(geo)
theta = sum(geo$dist ^ 2) / (2 * n)
theta
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8, n), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = seq(0,8, n), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
fit_bat
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
fit_bat = tibble(x = geo$dist, y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
x_range = seq(0,8)
for (i in 1:length(geo_dist)) {
x_i = geo_dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
x_range = seq(0,8)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
#my_y
fit_bat = tibble(x = geo$dist, y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo) +
geom_smooth(aes(x, y), data = fit_bat, color = "blue", alpha =.5, se = FALSE) +
labs(y = "pmf")
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo)
fit_bat
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
x_range = seq(0,8)
'''
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
my_y = append(my_y, result)
}
'''
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS 6030
library(ks)        # functions for KDE
library(tidyverse) # functions for data manipulation
n = nrow(geo)
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS 6030
library(ks)        # functions for KDE
library(tidyverse) # functions for data manipulation
set.seed(2019)
n = 283
sd = 2.1
x = sqrt(rnorm(n, sd=sd)^2 + rnorm(n, sd=sd)^2)
#readr::write_csv(tibble(x), "../data/geo_profile.csv", col_names=FALSE)
geo = read.csv("../data/geo_profile.csv", header = FALSE) %>% mutate(dist = V1)
geo = geo %>% dplyr::select(dist)
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
x_range = seq(0,8)
# for (i in 1:length(geo$dist)) {
#   x_i = geo$dist[i]
#   result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
#   my_y = append(my_y, result)
# }
for (i in 1:length(x_range)) {
x_i = x_range[i]
result = (x_i * 2*n) / sum(x_range[1:i] ^ 2) * exp(n * x_i ^2 / sum(x_range[1:i] ^ 2))
my_y = append(my_y, result)
}
my_y
#fit_pois=tibble(x=seq(min(x),max(x),by=1),y=dpois(x,lambda=lam.opt))
fit_bat = tibble(x = seq(0,8), y = my_y)
fit_bat
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo)
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS 6030
library(ks)        # functions for KDE
library(tidyverse) # functions for data manipulation
set.seed(2019)
n = 283
sd = 2.1
x = sqrt(rnorm(n, sd=sd)^2 + rnorm(n, sd=sd)^2)
#readr::write_csv(tibble(x), "../data/geo_profile.csv", col_names=FALSE)
geo = read.csv("../data/geo_profile.csv", header = FALSE) %>% mutate(dist = V1)
geo = geo %>% dplyr::select(dist)
n = nrow(geo)
n
mean(geo$dist)
my_y = c()
sum_dist = sum(geo$dist ^ 2)
x_range = seq(0,8)
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
#result = (x_i * 2*n) / sum(geo$dist[1:i] ^ 2) * exp(n * x_i ^2 / sum(geo$dist[1:i] ^ 2))
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_y = append(my_y, result)
}
# for (i in 1:length(x_range)) {
#   x_i = x_range[i]
#   result = (x_i * 2*n) / sum(x_range[1:i] ^ 2) * exp(n * x_i ^2 / sum(x_range[1:i] ^ 2))
#   my_y = append(my_y, result)
# }
my_y
#fit_pois=tibble(x=seq(min(x),max(x),by=1),y=dpois(x,lambda=lam.opt))
fit_bat = tibble(x = seq(0,8), y = my_y)
hist(my_y)
ggplot() +
geom_density(aes(dist),fill ="grey70", data = geo)
tibble(x=seq(min(my_y), max(my_y),by=1),y=my_y)
ggplot() +
geom_bar(aes(dist),fill ="grey70", data = geo) +
geom_density(aes(my_y), color="blue",alpha=.5)
ggplot() +
geom_bar(aes(dist),fill ="grey70", data = geo)
ggplot() +
geom_bar(aes(x = x_range, y = dist),fill ="grey70", data = geo) +
geom_density(aes(my_y), color="blue",alpha=.5)
ggplot() +
geom_bar(aes(y = dist),fill ="grey70", data = geo)
ggplot() +
geom_bar(aes(x = dist, y = stat(prop)),fill ="grey70", data = geo) +
geom_density(aes(my_y), color="blue",alpha=.5)
ggplot() +
geom_bar(aes(x = dist, y = stat(prop)),fill ="grey70", data = geo)
ggplot()+
geom_bar(aes(x,y=stat(prop)),fill="grey70")+
geom_point(aes(x,y),data=fit_pois,color="blue",alpha=.5)+ labs(y="pmf")
my_y = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_y = append(my_y, result)
}
my_y
mean(my_y)
# ggplot() +
#   geom_bar(aes(x = dist, y = stat(prop)),fill ="grey70", data = geo) +
#   geom_density(aes(my_y), color="blue",alpha=.5)
my_y = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_y = append(my_y, result)
}
mean(my_y)
# ggplot() +
#   geom_bar(aes(x = dist, y = stat(prop)),fill ="grey70", data = geo) +
#   geom_density(aes(my_y), color="blue",alpha=.5)
View(geo)
ggplot() +
geom_density(aes(my_y))
ggplot() +
geom_density(aes(my_y)) +
geom_bar(aes(stat(prop)), fill = "grey70", data = geo)
ggplot() +
geom_density(aes(my_y)) +
geom_bar(aes(x = dist, stat(prop)), fill = "grey70", data = geo)
ggplot() +
geom_bar(aes(x = dist, stat(prop)), fill = "grey70", data = geo)
ggplot() +
geom_bar(aes(x = x), fill = "grey70")
geo$dist
ggplot() +
geom_bar(aes(x = x))
ggplot(geo) +
geom_bar(aes(x = dist))
ggplot(geo) +
geom_histogram(aes(x = dist))
ggplot(geo) +
geom_histogram(aes(x = dist), fill ="grey70")
ggplot(geo) +
geom_histogram(aes(x = dist), fill ="grey70") +
geom_density(aes(my_y))
ggplot(geo) +
geom_histogram(aes(x = dist, y = stat(prop)), fill ="grey70") +
geom_density(aes(my_y))
ggplot(geo) +
geom_bar(aes(x = dist, y = stat(prop)), fill ="grey70")
ggplot(geo) +
geom_histogram(aes(x = dist, y = stat(prop)), fill ="grey70", stat = "count")
ggplot(geo) +
geom_bar(aes(x = dist, y = stat(prop)), fill ="grey70", stat = "count")
my_y = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_y = append(my_y, result)
}
mean(my_y)
# x=readr::read_csv(url)$count #extractasavector
# #:empiricalpmf
# ggplot()+geom_bar(aes(x=x))
x = geo$dist
ggplot() +
geom_density(aes(dist), fill = "grey70")
my_y = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_y = append(my_y, result)
}
mean(my_y)
x = geo$dist
ggplot() +
geom_density(aes(dist), fill = "grey70", data = geo)
ggplot(geo) +
geom_histogram(aes(x = dist, y = stat(prop)), fill ="grey70") +
geom_density(aes(my_y))
ggplot(geo) +
geom_histogram(aes(x = dist, y = stat(prop)), fill ="grey70")
ggplot(geo) +
geom_bar(aes(x = x, y = stat(prop)), fill ="grey70") +
geom_point(aes(x, my_y),color="blue",alpha=.5)+ labs(y="pmf")
ggplot(geo) +
geom_bar(aes(x = x, y = stat(prop)), fill ="grey70")
ggplot(geo) +
geom_histogram(aes(x = x, y = stat(prop)), fill ="grey70")
ggplot() +
geom_density(aes(dist), fill = "grey70", data = geo)
ggplot() +
geom_density(aes(dist), fill = "grey70", data = geo) +
geom_point(aes(x, my_y),color="blue",alpha=.5)+ labs(y="pmf")
ggplot() +
geom_density(aes(dist), fill = "grey70", data = geo)
tibble(x=seq(min(x),max(x),by=length(my_y)),y=my_y)
tibble(x= seq(min(x),max(x) , by=nrow(my_y)) ,y=my_y)
nrow(my_y)
length(my_y)
tibble(x= seq(min(x),max(x) , by=length(my_y)) ,y=my_y)
seq(min(x),max(x) , by=length(my_y)
my_y = c()
my_y = c()
my_x = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_x = append(my_x, result)
my_y = append(my_y, result)
}
mean(my_y)
x = geo$dist
fit_pois= tibble(x= my_x ,y=my_y)
tibble(x= my_x ,y=my_y)
my_y = c()
my_x = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_x = append(my_x, x_i)
my_y = append(my_y, result)
}
mean(my_y)
x = geo$dist
fit_pois= tibble(x= my_x ,y=my_y)
tibble(x= my_x ,y=my_y)
ggplot(geo) +
geom_histogram(aes(x = x, y = stat(prop)), fill ="grey70") +
geom_point(aes(x, my_y), data = fit_pois,color="blue",alpha=.5)+ labs(y="pmf")
ggplot() +
geom_bar(aes(x, dist), fill = "grey70", data = geo) +
geom_point(aes(x, my_y), data = fit_pois,color="blue",alpha=.5)+ labs(y="pmf")
ggplot() +
geom_bar(aes(x, dist), fill = "grey70", data = geo)
ggplot() +
geom_bar(aes(x, Y = stat(prop)), fill = "grey70", data = geo)
ggplot() +
geom_histogram(aes(x = x, fill ="grey70", data = geo)
ggplot() +
ggplot() +
geom_histogram(aes(x = x), fill ="grey70")
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70")
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70") +
geom_point(aes(x, my_y), data = fit_pois,color="blue",alpha=.5)+ labs(y="pmf")
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70") +
geom_density(aes(x, my_y), color="blue",alpha=.5)
ggplot() +
geom_point(aes(x, my_y), color="blue",alpha=.5)
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70") +
geom_point(aes(x, my_y), color="blue",alpha=.5)
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70") +
geom_point(aes(x, y), data = fit_geo, color="blue",alpha=.5)
my_y = c()
my_x = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_x = append(my_x, x_i)
my_y = append(my_y, result)
}
mean(my_y)
x = geo$dist
fit_geo= tibble(x= my_x ,y=my_y)
ggplot() +
geom_point(aes(x, my_y), color="blue",alpha=.5)
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70") +
geom_point(aes(x, y), data = fit_geo, color="blue",alpha=.5)
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS 6030
library(ks)        # functions for KDE
library(tidyverse) # functions for data manipulation
set.seed(2019)
n = 283
sd = 2.1
x = sqrt(rnorm(n, sd=sd)^2 + rnorm(n, sd=sd)^2)
#readr::write_csv(tibble(x), "../data/geo_profile.csv", col_names=FALSE)
geo = read.csv("../data/geo_profile.csv", header = FALSE) %>% mutate(dist = V1)
geo = geo %>% dplyr::select(dist)
my_y = c()
my_x = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_x = append(my_x, x_i)
my_y = append(my_y, result)
}
mean(my_y)
x = geo$dist
fit_geo= tibble(x= my_x ,y=my_y)
tibble(x = seq(min(x),max(x),by=1), y = my_y)
length(geo$dist)
tibble(x = seq(min(x),max(x), by= (max(x) - min(x) / length(x)) ), y = my_y)
my_y = c()
my_x = c()
for (i in 1:length(geo$dist)) {
x_i = geo$dist[i]
result = (1 / (2 * i)) * sum(geo$dist[1:i] ^ 2)
my_x = append(my_x, x_i)
my_y = append(my_y, result)
}
mean(my_y)
x = geo$dist
fit_geo= tibble(x= my_x ,y=my_y)
tibble(x = seq(min(x),max(x), by= (max(x) - min(x) / length(x)) ), y = my_y)
ggplot() +
geom_point(aes(x, my_y), color="blue",alpha=.5)
ggplot() +
geom_histogram(aes(x = x, y = ..density..), fill ="grey70") +
geom_point(aes(x, y), data = fit_geo, color="blue",alpha=.5)
