geom_line() + labs(title = "Test MSE for ntree = 50")
ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 500")
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result %>% arrange(Test.MSE)
result = result %>% arrange(Test.MSE)
rep("black", 35)
result = result %>% arrange(Test.MSE)
c("red",rep("black", 35))
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep("black", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color))+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result %>% filter(ntree == 10)
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = result %>% arrange(Test.MSE)
result$dot.color = c("r",rep("b", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = result %>% arrange(Test.MSE)
result$dot.color = c("r",rep(NA, 35))
result
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep(NA, 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep("grey", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep("lightgrey", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = result %>% arrange(Test.MSE)
result$dot.color = c("darkred",rep("azure4", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(col = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(color = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = result %>% arrange(Test.MSE)
result$dot.color = c("lowest",rep("rest", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) +labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS-6030
library(tidyverse) # functions for data manipulation
library(randomForest)
library(MASS)
library(caret)
# https://www.upgrad.com/blog/gini-index-for-decision-trees/
get_info = function(p_m){
gini = 1 - ( (p_m ^ 2) + (1 - p_m) ^ 2)
entropy = -(p_m * log2(p_m)) - ((1 - p_m) * log2(1 - p_m))
misclass = 1 - max(p_m, 1-p_m)
return(c(gini,entropy,misclass))
}
plot(0:1, 0:1, type = "n", xlab = "p_m", ylab = "data", main ="Gini, Entropy, Misclassifcation Error given probability")
for (p_m in seq(0,1,0.1)){
return_vals = get_info(p_m)
points(p_m, return_vals[1], col = "blue", bg = "blue", pch = 19)
points(p_m, return_vals[2], col = "green", bg = "green", pch = 19)
points(p_m, return_vals[3], col = "red", bg = "red", pch = 19)
}
legend(0.85, 0.95, legend=c("gini", "entropy", "misclass error"), col=c("blue", "green", "red"), lty=1:3, cex=0.55)
p_red = c(0.2, 0.25, 0.3, 0.4, 0.4, 0.45, 0.7, 0.85, 0.9, 0.9)
mean(p_red)
red_as_green = 2
green_as_red = 1
test_MSE = c()
for (i in 1:10) {
start_idx = i * 50 +1
if (i != 10){
end_idx = i*2
}
else{
end_idx = nrow(Boston)
}
test = Boston[start_idx : end_idx, ]
train = Boston[-c(start_idx:end_idx),]
x_train = train[,1:13]
y_train = train[,"medv"]
x_test = test[,1:13]
y_test = test[,"medv"]
rf_model = randomForest(x = x_train, y = y_train)
prediction = predict(rf_model, x_test)
MSE = mean((prediction - y_test)^2)
test_MSE = append(test_MSE, MSE)
}
plot(1:10, seq(0,60, by = 61 / 10), type = "n", xlab = "Fold", ylab = "test_MSE", main ="Test MSE of 10-fold CV")
for (i in 1:10){
points(i, test_MSE[i], col = "red", bg = "red", pch = 19)
}
mtry_vals = seq(5, 13, by = 1)
ntree_vals = c(10, 50, 100, 500)
set.seed(123)
test_MSE = c()
ntee_param = c()
mtry_param = c()
result = data.frame("ntree"= NA, "mtry" = NA, "Test MSE" = NA)
for (ntree in ntree_vals){
for (mtry in mtry_vals) {
oob_MSE = c()
for (i in 1:5) {
ind = sample(nrow(Boston), size = 100, replace = FALSE)
train = Boston[-ind,]
test = Boston[ind,]
x_train = train[, 1:13]
y_train = train[,"medv"]
x_test = test[,1:13]
y_test = test[,"medv"]
rf_model = randomForest(x = x_train, y = y_train, ntree = ntree, mtry = mtry)
prediction = predict(rf_model, x_test)
MSE = mean((prediction - y_test)^2)
oob_MSE = append(oob_MSE, MSE)
}
result[nrow(result) + 1,] <- c(ntree,mtry,mean(oob_MSE))
}
}
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result$dot.color = c("lowest",rep("rest", 35))
result
library(gridExtra)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result$dot.color = c(factor("lowest"),rep(factor("rest"), 35))
result
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10") + geom_point(aes(colour = dot.color))
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result$dot.color = c("lowest",rep(NA, 35))
result
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep("black", 35))
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep("black", 35))
result
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS-6030
library(tidyverse) # functions for data manipulation
library(randomForest)
library(MASS)
library(gridExtra)
# https://www.upgrad.com/blog/gini-index-for-decision-trees/
get_info = function(p_m){
gini = 1 - ( (p_m ^ 2) + (1 - p_m) ^ 2)
entropy = -(p_m * log2(p_m)) - ((1 - p_m) * log2(1 - p_m))
misclass = 1 - max(p_m, 1-p_m)
return(c(gini,entropy,misclass))
}
plot(0:1, 0:1, type = "n", xlab = "p_m", ylab = "data", main ="Gini, Entropy, Misclassifcation Error given probability")
for (p_m in seq(0,1,0.1)){
return_vals = get_info(p_m)
points(p_m, return_vals[1], col = "blue", bg = "blue", pch = 19)
points(p_m, return_vals[2], col = "green", bg = "green", pch = 19)
points(p_m, return_vals[3], col = "red", bg = "red", pch = 19)
}
legend(0.85, 0.95, legend=c("gini", "entropy", "misclass error"), col=c("blue", "green", "red"), lty=1:3, cex=0.55)
p_red = c(0.2, 0.25, 0.3, 0.4, 0.4, 0.45, 0.7, 0.85, 0.9, 0.9)
mean(p_red)
red_as_green = 2
green_as_red = 1
test_MSE = c()
for (i in 1:10) {
start_idx = i * 50 +1
if (i != 10){
end_idx = i*2
}
else{
end_idx = nrow(Boston)
}
test = Boston[start_idx : end_idx, ]
train = Boston[-c(start_idx:end_idx),]
x_train = train[,1:13]
y_train = train[,"medv"]
x_test = test[,1:13]
y_test = test[,"medv"]
rf_model = randomForest(x = x_train, y = y_train)
prediction = predict(rf_model, x_test)
MSE = mean((prediction - y_test)^2)
test_MSE = append(test_MSE, MSE)
}
plot(1:10, seq(0,60, by = 61 / 10), type = "n", xlab = "Fold", ylab = "test_MSE", main ="Test MSE of 10-fold CV")
for (i in 1:10){
points(i, test_MSE[i], col = "red", bg = "red", pch = 19)
}
mtry_vals = seq(5, 13, by = 1)
ntree_vals = c(10, 50, 100, 500)
set.seed(123)
test_MSE = c()
ntee_param = c()
mtry_param = c()
result = data.frame("ntree"= NA, "mtry" = NA, "Test MSE" = NA)
for (ntree in ntree_vals){
for (mtry in mtry_vals) {
oob_MSE = c()
for (i in 1:5) {
ind = sample(nrow(Boston), size = 100, replace = FALSE)
train = Boston[-ind,]
test = Boston[ind,]
x_train = train[, 1:13]
y_train = train[,"medv"]
x_test = test[,1:13]
y_test = test[,"medv"]
rf_model = randomForest(x = x_train, y = y_train, ntree = ntree, mtry = mtry)
prediction = predict(rf_model, x_test)
MSE = mean((prediction - y_test)^2)
oob_MSE = append(oob_MSE, MSE)
}
result[nrow(result) + 1,] <- c(ntree,mtry,mean(oob_MSE))
}
}
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result$dot.color = c("red",rep("black", 35))
result
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")
+ scale_color_identity()
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10")
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50")
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100")
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")+ scale_color_identity()
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10") + scale_color_identity()
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50") + scale_color_identity()
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100") + scale_color_identity()
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")+ scale_color_identity()
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
result %>% filter(ntree == 50)
source(system.file("config/hw_config.R", package="R6030")) # knitr settings
options(dplyr.summarise.inform = FALSE)  # ignore dplyr message about grouping
data.dir = 'https://mdporter.github.io/DS6030/data/' # data directory
library(R6030)     # functions for DS-6030
library(tidyverse) # functions for data manipulation
library(randomForest)
library(MASS)
library(gridExtra)
# https://www.upgrad.com/blog/gini-index-for-decision-trees/
get_info = function(p_m){
gini = 1 - ( (p_m ^ 2) + (1 - p_m) ^ 2)
entropy = -(p_m * log2(p_m)) - ((1 - p_m) * log2(1 - p_m))
misclass = 1 - max(p_m, 1-p_m)
return(c(gini,entropy,misclass))
}
plot(0:1, 0:1, type = "n", xlab = "p_m", ylab = "data", main ="Gini, Entropy, Misclassifcation Error given probability")
for (p_m in seq(0,1,0.1)){
return_vals = get_info(p_m)
points(p_m, return_vals[1], col = "blue", bg = "blue", pch = 19)
points(p_m, return_vals[2], col = "green", bg = "green", pch = 19)
points(p_m, return_vals[3], col = "red", bg = "red", pch = 19)
}
legend(0.85, 0.95, legend=c("gini", "entropy", "misclass error"), col=c("blue", "green", "red"), lty=1:3, cex=0.55)
p_red = c(0.2, 0.25, 0.3, 0.4, 0.4, 0.45, 0.7, 0.85, 0.9, 0.9)
mean(p_red)
red_as_green = 2
green_as_red = 1
test_MSE = c()
for (i in 1:10) {
start_idx = i * 50 +1
if (i != 10){
end_idx = i*2
}
else{
end_idx = nrow(Boston)
}
test = Boston[start_idx : end_idx, ]
train = Boston[-c(start_idx:end_idx),]
x_train = train[,1:13]
y_train = train[,"medv"]
x_test = test[,1:13]
y_test = test[,"medv"]
rf_model = randomForest(x = x_train, y = y_train)
prediction = predict(rf_model, x_test)
MSE = mean((prediction - y_test)^2)
test_MSE = append(test_MSE, MSE)
}
plot(1:10, seq(0,60, by = 61 / 10), type = "n", xlab = "Fold", ylab = "test_MSE", main ="Test MSE of 10-fold CV")
for (i in 1:10){
points(i, test_MSE[i], col = "red", bg = "red", pch = 19)
}
mtry_vals = seq(5, 13, by = 1)
ntree_vals = c(10, 50, 100, 500)
set.seed(123)
test_MSE = c()
ntee_param = c()
mtry_param = c()
result = data.frame("ntree"= NA, "mtry" = NA, "Test MSE" = NA)
for (ntree in ntree_vals){
for (mtry in mtry_vals) {
oob_MSE = c()
for (i in 1:5) {
ind = sample(nrow(Boston), size = 100, replace = FALSE)
train = Boston[-ind,]
test = Boston[ind,]
x_train = train[, 1:13]
y_train = train[,"medv"]
x_test = test[,1:13]
y_test = test[,"medv"]
rf_model = randomForest(x = x_train, y = y_train, ntree = ntree, mtry = mtry)
prediction = predict(rf_model, x_test)
MSE = mean((prediction - y_test)^2)
oob_MSE = append(oob_MSE, MSE)
}
result[nrow(result) + 1,] <- c(ntree,mtry,mean(oob_MSE))
}
}
result = drop_na(result)
result = result %>% arrange(Test.MSE)
result
result$dot.color = c("red",rep("black", 35))
plot1 = ggplot(result %>% filter(ntree == 10), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+labs(title = "Test MSE for ntree = 10") + scale_color_identity()
plot2 = ggplot(result %>% filter(ntree == 50), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 50") + scale_color_identity()
plot3 = ggplot(result %>% filter(ntree == 100), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line()+ labs(title = "Test MSE for ntree = 100") + scale_color_identity()
plot4 = ggplot(result %>% filter(ntree == 500), aes(x = mtry, y = Test.MSE), col = "blue") +
geom_line() + geom_point(aes(colour = dot.color)) + labs(title = "Test MSE for ntree = 500")+ scale_color_identity()
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow = 2)
red_as_green = 2
green_as_red = 1
posterior_red = mean(p_red)
posterior_green = 1 - posterior_red
red_as_green * posterior_green
green_as_red * posterior_red
